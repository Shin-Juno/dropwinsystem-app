<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dropwinsystem.app.mapper.BidMapper">

    <resultMap id="bidResultMap" type="com.dropwinsystem.app.domain.Bid">
        <id property="id" column="id"/>
        <result property="itemId" column="item_id"/>
        <result property="userId" column="user_id"/>
        <result property="bidPrice" column="bid_price"/>
        <result property="bidTime" column="bid_time"/>
        <result property="status" column="status"/>
        <result property="itemName" column="item_name"/>
        <result property="userName" column="user_name"/>
        <result property="itemEndTime" column="item_end_time"/>
        <result property="itemImagePath" column="item_image_path"/>
    </resultMap>

    <insert id="insertBid" parameterType="com.dropwinsystem.app.domain.Bid" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO bids (
            item_id, user_id, bid_price, bid_time, status
        ) VALUES (
            #{itemId}, #{userId}, #{bidPrice}, NOW(), '입찰 중'
        )
    </insert>

    <select id="findBidsByUserId" parameterType="string" resultMap="bidResultMap">
        SELECT
            b.id,
            b.item_id,
            b.user_id,
            b.bid_price,
            b.bid_time,
            b.status,
            i.name AS item_name,
            SUBSTRING_INDEX(i.image_paths, ',', 1) AS item_image_path,
            m.name AS user_name,
            i.end_time AS item_end_time
        FROM bids b
        JOIN items i ON b.item_id = i.id
        JOIN members m ON b.user_id = m.id
        WHERE b.user_id = #{userId}
        ORDER BY b.bid_time DESC
    </select>

    <select id="findMaxBidPriceByItemId" parameterType="int" resultType="java.lang.Integer">
        SELECT MAX(bid_price)
        FROM bids
        WHERE item_id = #{itemId}
    </select>

    <select id="findBidsByItemIdOrderByBidTimeDesc" parameterType="int" resultMap="bidResultMap">
        SELECT
            b.id,
            b.item_id,
            b.user_id,
            b.bid_price,
            b.bid_time,
            b.status,
            i.name AS item_name,
            m.name AS user_name,
            i.end_time AS item_end_time
        FROM bids b
        JOIN items i ON b.item_id = i.id
        JOIN members m ON b.user_id = m.id
        WHERE b.item_id = #{itemId}
        ORDER BY b.bid_time DESC
    </select>

    <!-- ⭐⭐⭐ 새로 추가된 쿼리: 특정 물품의 최종 낙찰된 입찰(가장 높은 입찰가)을 찾는 맵핑 구문 ⭐⭐⭐ -->
    <select id="findWinningBidByItemId" parameterType="int" resultMap="bidResultMap">
        SELECT
            b.id, b.item_id, b.user_id, b.bid_price, b.bid_time, b.status,
            i.name AS item_name, SUBSTRING_INDEX(i.image_paths, ',', 1) AS item_image_path,
            m.name AS user_name, i.end_time AS item_end_time
        FROM bids b
        JOIN items i ON b.item_id = i.id
        JOIN members m ON b.user_id = m.id
        WHERE b.item_id = #{itemId}
        ORDER BY b.bid_price DESC, b.bid_time ASC
        LIMIT 1
    </select>

    <!-- 기존 updateBidStatusByItemIdAndUserId 쿼리는 그대로 두거나 필요 없으면 삭제해도 됩니다. -->
    <update id="updateBidStatusByItemIdAndUserId" parameterType="map">
        UPDATE bids
        SET status = #{status}
        WHERE item_id = #{itemId}
          AND user_id = #{userId}
          <!-- AND (status = '낙찰' OR status = '입찰 중') -->
    </update>

    <update id="updateBidStatus" parameterType="map">
        UPDATE bids
        SET status = #{status}
        WHERE id = #{bidId}
    </update>

    <!-- ⭐⭐⭐ 추가: 특정 물품의 낙찰자를 제외한 나머지 입찰 상태를 '패찰'로 변경하는 맵핑 구문 ⭐⭐⭐ -->
    <update id="updateLosingBidsByItemId" parameterType="map">
        UPDATE bids
        SET status = '패찰'
        WHERE item_id = #{itemId}
          AND id != #{winningBidId}
    </update>

</mapper>
